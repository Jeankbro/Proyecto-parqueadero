# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'car_info_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

from controllers import controller_parking_lot


class Ui_car_info_window(object):
    def setupUi(self, car_info_window):
        car_info_window.setObjectName("car_info_window")
        car_info_window.resize(772, 286)
        self.car_info_section = QtWidgets.QGroupBox(car_info_window)
        self.car_info_section.setGeometry(QtCore.QRect(10, 20, 741, 241))
        self.car_info_section.setObjectName("car_info_section")
        self.car_info_table = QtWidgets.QTableWidget(self.car_info_section)
        self.car_info_table.setGeometry(QtCore.QRect(20, 30, 701, 191))
        self.car_info_table.setObjectName("car_info_table")
        self.car_info_table.setColumnCount(5)
        self.car_info_table.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.car_info_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.car_info_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.car_info_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.car_info_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.car_info_table.setHorizontalHeaderItem(4, item)

        self.retranslateUi(car_info_window)
        QtCore.QMetaObject.connectSlotsByName(car_info_window)

    def retranslateUi(self, car_info_window):
        _translate = QtCore.QCoreApplication.translate
        car_info_window.setWindowTitle(_translate("car_info_window", "Información del carro"))
        self.car_info_section.setTitle(_translate("car_info_window", "Información del carro"))
        item = self.car_info_table.horizontalHeaderItem(0)
        item.setText(_translate("car_info_window", "Marca del carro"))
        item = self.car_info_table.horizontalHeaderItem(1)
        item.setText(_translate("car_info_window", "Tipo de carro"))
        item = self.car_info_table.horizontalHeaderItem(2)
        item.setText(_translate("car_info_window", "Placa"))
        item = self.car_info_table.horizontalHeaderItem(3)
        item.setText(_translate("car_info_window", "Fecha de ingreso"))
        item = self.car_info_table.horizontalHeaderItem(4)
        item.setText(_translate("car_info_window", "Tiempo elapsado"))

    def show_message(self, message, type_message):
        msg = QMessageBox()
        msg.setText(message)
        msg.setIcon(type_message)
        msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
        retval = msg.exec_()

    def load_data(self, car):
        if car is None:
            self.show_message("El carro no pudo ser encontrado(a), intente de nuevo.", QMessageBox.Critical)
        else:
            self.car_info_table.setItem(0, 0, QtWidgets.QTableWidgetItem(str(car.car_brand)))
            self.car_info_table.setItem(0, 1, QtWidgets.QTableWidgetItem(str(car.car_type)))
            self.car_info_table.setItem(0, 2, QtWidgets.QTableWidgetItem(str(car.car_id)))
            self.car_info_table.setItem(0, 3, QtWidgets.QTableWidgetItem(str("hola")))
            self.car_info_table.setItem(0, 4, QtWidgets.QTableWidgetItem(str("hola")))

    def get_car_by_id(self, car):
        car_searched = controller_parking_lot.get_car_by_id(car)
        self.load_data(car_searched)
